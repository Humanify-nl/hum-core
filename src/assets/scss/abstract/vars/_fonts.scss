
// Fonts [responsive]
// --------------------------------------------- /

$map-fonts: (
  small: (
    base: 13,
    small: 13,
    medium: 14,
    large: 15,
  ),
  normal: (
    base: 15,
    small: 16,
    medium: 17,
    large: 18,
  ),
  large: (
    base: 17,
    small: 18,
    medium: 22,
    large: 24,
  ),
  h1: (
    base: 30,
    small: 38,
    medium: 46,
    large: 52,
  ),
  h2: (
    base: 26,
    small: 36,
    medium: 42,
    large: 44,
  ),
  h3: (
    base: 20,
    small: 24,
    medium: 28,
    large: 32,
  ),
  h4: (
    base: 17,
    small: 20,
    medium: 22,
    large: 24,
  ),
  post-title: (
    base: 32,
    small: 36,
    medium: 52,
    large: 64,
  ),
);

// Get font-size in rem from map

@function fontsize_rem($type, $size: base) {
  $fontsize_rem: map-get(map-get($map-fonts, $type), $size) * 0.0625rem;
  @return $fontsize_rem;
}

// Root variables

$font-prefix: --font-size-;

:root {

  // not in map
  --font-headings: "Lato";
  --font-primary: var(--font-headings, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  --font-secondary: var(--font-base, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
	--line-height-body: 1.7;
	--line-height-heading: 1.1;
	--line-height-page-title: 1.1;

  // each item, submap in size map
  @each $selector, $breakpoints in $map-fonts {
    // each item in sub map
    @each $breakpoint-name, $font-size in $breakpoints {
      @if $breakpoint-name == base {
        #{$font-prefix + $selector}: $font-size * 0.0625rem;
      }
    }
  }
}

@media only screen and (min-width: #{$small}) {
  :root {
    @each $selector, $breakpoints in $map-fonts {
      @each $breakpoint-name, $font-size in $breakpoints {

        @if $breakpoint-name == small {
          #{$font-prefix + $selector}: $font-size * 0.0625rem;
        }
      }
    }
  }
}


@media only screen and (min-width: #{$medium}) {
  :root {
    @each $selector, $breakpoints in $map-fonts {
      @each $breakpoint-name, $font-size in $breakpoints {

        @if $breakpoint-name == medium {
          #{$font-prefix + $selector}: $font-size * 0.0625rem;
        }
      }
    }
  }
}

@media only screen and (min-width: #{$large}) {
  :root {
    @each $selector, $breakpoints in $map-fonts {
      @each $breakpoint-name, $font-size in $breakpoints {

        @if $breakpoint-name == large {
          #{$font-prefix + $selector}: $font-size * 0.0625rem;
        }
      }
    }
  }
}



// Font Sizes

@mixin font-sizes( $base: null, $small: null, $medium: null, $large: null ) {

  @if ( $base ) {
    font-size: $base;
  }

  @if( $small ) {
    @include bp-min($small) {
      font-size: $small;
    }
  }

  @if( $medium ) {
    @include bp-min($medium) {
      font-size: $medium;
    }
  }

  @if( $large ) {
    @include bp-min($large) {
      font-size: $large;
    }
  }

}
