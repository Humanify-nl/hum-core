
// Colors
// --------------------------------------------- /

$color-picker: (
  primary: #206697,
  secondary: #1D8B5D,
  tertiary: #F4643D,
  grey-light: #EBEBEB,
  white: #FAFAFA,
  black: #0f0C1C,
);

@function c($color-name) {
  @return map-get($color-picker,$color-name);
}

$map-colors: (
  base: (
    base: c(black),
  ),
  primary: (
    base: c(primary),
    light: lighten(c(primary), 10),
    dark: darken(c(primary), 10),
  ),
  secondary: (
    base: c(secondary),
    light: lighten(c(secondary), 10),
    dark: darken(c(secondary), 10),
  ),
  tertiary: (
    base: c(tertiary),
    light: lighten(c(tertiary), 10),
    dark: darken(c(tertiary), 10),
  ),
  white: (
    base: c(white),
    flash: #f1f2f4,
    grey: #f7f7f7,
    true: #fff,
    50: rgba( #fff, 0.5),
  ),
  grey: (
    base: #C2C2C2,
    light: c(grey-light),
    text: #757575,
  ),
  black: (
    base: c(black),
    light: #222,
    dark: #111,
  ),
);



// variable prefix
$color-prefix: '--color';

// retrieve color from map `clr(primary, base)`
@function clr($color-name, $color-variant: base) {
  @return map-get(map-get($map-colors,$color-name),$color-variant);
}


// Write variables in root -------------------- /

:root {

  // each item in color map
  @each $color-name, $color-shades in $map-colors {

    // maps require a second loop
    @if type-of($color-shades) == "map" {

      // each item in sub map
      @each $subname, $color-hex in $color-shades {
        // --color-primary-base
        @if $subname == 'base' {
          #{$color-prefix + '--' + $color-name}: $color-hex;
        } @else {
          #{$color-prefix + '--' + $color-name + '-' + $subname}: $color-hex;
        }
      }
    // no map
    } @else if type-of($color-shades) == "color" {
      // output color
      #{$color-prefix + '--' + $color-name}: $color-shades;
    }
  }
}
