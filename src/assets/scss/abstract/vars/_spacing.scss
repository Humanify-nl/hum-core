
// Spacing - [responsive]
// --------------------------------------------- /

$spacing-unit: 1rem;

$map-spacing: (
	// blocks
	block-gap: 2 * $spacing-unit, 					// between blocks (horizontal)
	block-pad: 1 * $spacing-unit,
	block-inner-gap: $spacing-unit,					// inside blocks
	// between blocks (vertical)
	block-margin: (
		small: 1.5 * $spacing-unit,
	  medium: 2 * $spacing-unit,
		large: 2 * $spacing-unit,
	),
	// spacing
	spacing-horizontal: (
		small: 1 * $spacing-unit,
		medium: 2 * $spacing-unit,
		large: 2 * $spacing-unit,
	),
	spacing-vertical-sm: (
		small: 1.5 * $spacing-unit,
		medium: 2 * $spacing-unit,
		large: 3 * $spacing-unit,
	),
	spacing-vertical: (
	  small: 2 * $spacing-unit,
		medium: 4 * $spacing-unit,
	  large: 5 * $spacing-unit,
	),
	spacing-vertical-lg: (
		small: 4 * $spacing-unit,
		medium: 6 * $spacing-unit,
		large: 8 * $spacing-unit,
	),
	// padding
	padding: (
		small: 1 * $spacing-unit,
		medium: 1.5 * $spacing-unit,
		large: 2 * $spacing-unit,
	),
	padding-inner: (
		small: 0.5 * $spacing-unit,
		medium: 0.75 * $spacing-unit,
		large: 1 * $spacing-unit,
	),
	featured-img: (
		small: 15 * $spacing-unit, // 240px
		medium: 18 * $spacing-unit, // 288px
		large: 20 * $spacing-unit, // 320px
	),
	gallery-gap: (
	small: 0.25em,
	medium: 0.5em,
	large: 0.75em,
	),
	// grid
	grid-gap: 4 * $spacing-unit,						// between previews (horizontal)
	grid-gutter-factor: 0.5, 				          // multiplier for gap
  // gallery
	// text
	text-margin: 1.5 * $spacing-unit,
	line-height: 1.5,
	line-height-heading: 1.2,
	elevation: 1px 1px 3px 0 rgba(0, 0, 0, 0.2),
	// icon
	icon-padding: 0.75 * $spacing-unit,
	icon-size: 2.5 * $spacing-unit,
	icon-size-outer: (2.5 + (0.75 * 2)) * $spacing-unit,
);


// retrieve color from map: button(base, color-text)
@function v($map-name, $selector, $properties:null) {

  // variant is optional
  @if ($properties != null) {

    // map inception, need two deep
    @return map-get(map-get($map-name,$selector),$properties);

    } @else {
      // single-level color, one deep
      @return map-get($map-name,$selector);
    }

}

// Used internally

// Grid
$grid-gap: v($map-spacing, grid-gap);
$grid-gutter-factor: v($map-spacing, grid-gutter-factor);

// Blocks

$pad: 1 * $spacing-unit;
$pad_inner: 0.5 * $spacing-unit;

// Previews

$line_height_preview_title: 1.2;

// Lists

$list_text_indent: 1.3125em;
$list_padding: 0.25em;
$list_padding_left: 1.5em;

// Root variables

$spacing-prefix: '--';

:root {
	@each $selector, $value in $map-spacing {

		@if type-of($value) != "map" {
			#{$spacing-prefix + $selector}: $value;
		}
	}
}

@media only screen and (max-width: #{$medium}) {

  :root {
    @each $selector, $breakpoints in $map-spacing {
      @each $breakpoint-name, $value in $breakpoints {

        @if $breakpoint-name == small {
          #{$spacing-prefix + $selector}: $value;
        }
      }
    }
  }
}

@media only screen and (min-width: #{$medium}) {
  :root {
    @each $selector, $breakpoints in $map-spacing {
      @each $breakpoint-name, $value in $breakpoints {

        @if $breakpoint-name == medium {
          #{$spacing-prefix + $selector}: $value;
        }
      }
    }
  }
}

@media only screen and (min-width: #{$large}) {
  :root {
    @each $selector, $breakpoints in $map-spacing {
      @each $breakpoint-name, $value in $breakpoints {

        @if $breakpoint-name == large {
          #{$spacing-prefix + $selector}: $value;
        }
      }
    }
  }
}


// Admin-bar height if not exists

:root {
	--admin-bar--height: 0px;
}

// Admin-bar if exists

.admin-bar {
	--admin-bar--height: 32px;

	@media only screen and (max-width: 782px) {
		--admin-bar--height: 46px;
	}
}
