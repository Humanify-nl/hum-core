
// Spacing
// --------------------------------------------- /

$spacing-unit: 1rem;

$map-spacing: (
	spacing-vertical: (
	  small: 4 * $spacing-unit,
		medium: 5 * $spacing-unit,
	  large: 6 * $spacing-unit,
	),
	spacing-horizontal: (
	  small: 1 * $spacing-unit,
		medium: 2 * $spacing-unit,
		large: 2 * $spacing-unit,
	),
	padding: (
		small: 1 * $spacing-unit,
		medium: 1.5 * $spacing-unit,
		large: 2 * $spacing-unit,
	),
	padding-inner: (
		small: 0.5 * $spacing-unit,
		medium: 0.75 * $spacing-unit,
		large: 1 * $spacing-unit,
	),
	// blocks
	block-gap: 2 * $spacing-unit, 					// between blocks (vertical)
	block-margin: 2 * $spacing-unit,				// between blocks (horizontal)
	block-pad: 1 * $spacing-unit,
	block-inner-gap: $spacing-unit,					// inside blocks
	// grid
	grid-gap: 2 * $spacing-unit,						// between previews (horizontal)
	grid-gutter-factor: 2, 				          // multiplier for gap
	grid-gap-preview: 2 * $spacing-unit,
	grid-gap-gallery: 0.25 * $spacing-unit,
	// text
	text-margin: 1.5 * $spacing-unit,
	text-margin-x2: 3 * $spacing-unit,
	line-height: 1.5,
	elevation: 1px 1px 3px 0 rgba(0, 0, 0, 0.2),
);


// retrieve color from map: button(base, color-text)
@function v($map-name, $selector, $properties:null) {

  // variant is optional
  @if ($properties != null) {

    // map inception, need two deep
    @return map-get(map-get($map-name,$selector),$properties);

    } @else {
      // single-level color, one deep
      @return map-get($map-name,$selector);
    }

}

// Used internally (mixins)

// Grid
$grid-gap: v($map-spacing, grid-gap);
$grid-gutter-factor: v($map-spacing, grid-gutter-factor);

// Blocks

$pad: 1 * $spacing-unit;
$pad_inner: 0.5 * $spacing-unit;

// Previews

$line_height_preview_title: 1.2;


// Root variables

$spacing-prefix: '--global';

:root {
	@each $selector, $value in $map-spacing {

		@if type-of($value) != "map" {
			#{$spacing-prefix + '--' + $selector}: $value;
		}
	}
}

@media only screen and (max-width: #{$small}) {

  :root {
    @each $selector, $breakpoints in $map-spacing {
      @each $breakpoint-name, $value in $breakpoints {

        @if $breakpoint-name == small {
          #{$spacing-prefix + '--' + $selector}: $value;
        }
      }
    }
  }
}

@media only screen and (min-width: #{$small}) {
  :root {
    @each $selector, $breakpoints in $map-spacing {
      @each $breakpoint-name, $value in $breakpoints {

        @if $breakpoint-name == medium {
          #{$spacing-prefix + '--' + $selector}: $value;
        }
      }
    }
  }
}

@media only screen and (min-width: #{$medium}) {
  :root {
    @each $selector, $breakpoints in $map-spacing {
      @each $breakpoint-name, $value in $breakpoints {

        @if $breakpoint-name == large {
          #{$spacing-prefix + '--' + $selector}: $value;
        }
      }
    }
  }
}


// Admin-bar height if not exists

:root {
	--global--admin-bar--height: 0px;
}

// Admin-bar if exists

.admin-bar {
	--global--admin-bar--height: 32px;

	@media only screen and (max-width: 782px) {
		--global--admin-bar--height: 46px;
	}
}
